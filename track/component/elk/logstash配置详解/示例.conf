# 输入配置
input { 
    # filebeat收集端口
    beats {
        port => 5044
        }
    # tcp收集端口
    tcp { 
        port => 4560 
        codec => 
        json_lines 
        } 
	} 
# 过滤
filter {
    # 使用 grok 过滤
    grok {
        # 
        match => { "message" => "%{TIMESTAMP_ISO8601:time}\s*%{LOGLEVEL:level} \[(?<appname>([0-9A-Za-z\-]{0,30}|)),(?<traceid>([0-9A-Fa-f]{16}|)),(?<spanid>([0-9A-Fa-f]{16}|)),(?<bool>(true|TRUE|false|FALSE|))\] \[(?<processname>([\S]{1,50}|)),(?<processid>([0-9A-Za-z\-\.\_]{1,50}|))\] %{POSINT:pid} --- \[%{GREEDYDATA:thread}\] (?<class>(([a-zA-Z0-9\_\.\-\[\]\/]+\.)*[A-Za-z0-9\[\]$]+)) \s*: %{GREEDYDATA:message}" }
	    overwrite => ["message"]
        }
    # 使用 mutate 去除无用字段
    mutate {  
        remove_field => "@version"
        remove_field => "_score"
        remove_field => "host"
        remove_field => "_type"
        remove_field => "beat"
        remove_field => "offset"
        remove_field => "source"
        remove_field => "tags"
        }
    # 替换时间为日志打印的时间
    date {
        match => [ "time", "YYYY-MM-dd;HH:mm:ss.SSS", "ISO8601" ]
        locale => "en"
        target => [ "@timestamp" ]
    }
        
}
output { 
    elasticsearch { 
        action => "index"  
        hosts =>  ["127.0.0.1:9200"] 
        index => "system-%{+YYYY.MM.dd}" 
        } 
    stdout { codec => rubydebug  } 
}

扩展：
    filebeat 的配置如下
        # 不以时间格式开头的 并到上以时间开头的一行，主要处理 java 堆栈信息
        multiline.pattern: ^[1-2]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (0[0-9]|1[0-9]|2[0-4]):([0-5][0-9]):([0-5][0-9])
        multiline.negate: true
        multiline.match: after