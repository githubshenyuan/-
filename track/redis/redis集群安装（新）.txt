一、环境：
	redis版本：	3.2.12
	系统：	centos7 (3.10.0-514.el7.x86_64)
    网络：  外网连接
二、下载及安装
	1、下载：
        mkdir -p /usr/local/redis
		redis-3.2.12.tar.gz 复制到 /usr/local/redis 目录下
	2、安装：
		cd /usr/local/redis \
		&& tar -zxvf redis-3.2.12.tar.gz \
		&& cd redis-3.2.12 \
		&& yum install -y gcc-c++ \
		&& mkdir -p /usr/local/redis/redis-cluster \
		&& make MALLOC=libc install PREFIX=/usr/local/redis/redis-cluster
    3、创建节点路径：
        cd /usr/local/redis/redis-cluster \
        && mkdir -p 9001/data 9002/data 9003/data 9004/data 9005/data 9006/data
    4、编辑配置文件：
        vi /usr/local/redis/redis-3.2.12/redis.conf
        参考：
            # 每个节点的端口号
            port 9001
            # Redis作为守护程序运行（redis后台运行）
            daemonize yes
            # 绑定当前机器 IP
            bind 192.168.119.131
            # 数据文件存放位置
            dir ./data
            # 进程写入文件 （pid 9001和port要对应）
            pidfile ./redis_9001.pid
            # 启动集群模式
            cluster-enabled yes
            # 9001和port要对应
            cluster-config-file nodes9001.conf
            # 超时时间
            cluster-node-timeout 15000
            # aof日志开启  有需要就开启，它会每次写操作都记录一条日志
            appendonly yes
    5、复制配置文件到节点目录下：
        cd /usr/local/redis/redis-3.2.12 \
        && cp -rf  redis.conf /usr/local/redis/redis-cluster/9001 \
		&& cp -rf  redis.conf /usr/local/redis/redis-cluster/9002 \
		&& cp -rf  redis.conf /usr/local/redis/redis-cluster/9003 \
		&& cp -rf  redis.conf /usr/local/redis/redis-cluster/9004 \
		&& cp -rf  redis.conf /usr/local/redis/redis-cluster/9005 \
		&& cp -rf  redis.conf /usr/local/redis/redis-cluster/9006
三、安装 ruby 相关：
    yum install -y ruby \
	&& yum install -y rubygems \
	&& gem install redis -v 3.2.2
四、启动服务：
    ./redis-server ../9001/redis.conf \
    && ./redis-server ../9002/redis.conf \
    && ./redis-server ../9003/redis.conf \
    && ./redis-server ../9004/redis.conf \
    && ./redis-server ../9005/redis.conf \
    && ./redis-server ../9006/redis.conf
五、添加集群：
    命令：（--replicas 1 标识一个从节点）
        cd /usr/local/redis/redis-3.2.12/src 
        ./redis-trib.rb create --replicas 1 192.168.137.103:9001 192.168.137.103:9002 192.168.137.103:9003 192.168.137.103:9004 192.168.137.103:9005 192.168.137.103:9006
    添加节点到集群：
        cluster meet 192.168.137.103:9007
    移除节点：

    
六、查询：
    1、连接客户端：
        ./redis-cli -h 192.168.137.103 -p 9001
    2、查询集群信息：
        cluster info                        // 打印集群的信息
        cluster nodes                       // 列出集群当前已知的所有节点(node)，以及这些节点的相关信息  
        cluster meet <ip> <port>            // 将ip和port所指定的节点添加到集群当中，让它成为集群的一份子  
        cluster forget <node_id>            // 从集群中移除node_id指定的节点
        cluster replicate <node_id>         // 将当前节点设置为node_id指定的节点的从节点
        cluster saveconfig                  // 将节点的配置文件保存到硬盘里面
        cluster slaves <node_id>            // 列出该slave节点的master节点
        cluster set-config-epoch            // 强制设置configEpoch 


    
以下为日志输出记录：    
    （五）添加集群正常日志：
        >>> Creating cluster
        >>> Performing hash slots allocation on 6 nodes...
        Using 3 masters:
        192.168.137.103:9001
        192.168.137.103:9002
        192.168.137.103:9003
        Adding replica 192.168.137.103:9004 to 192.168.137.103:9001
        Adding replica 192.168.137.103:9005 to 192.168.137.103:9002
        Adding replica 192.168.137.103:9006 to 192.168.137.103:9003
        M: b44cf658d61538359b1f941b6920fa8b69e28388 192.168.137.103:9001
        slots:0-5460 (5461 slots) master
        M: 87d089195f825e93bd8863f60c685b76978e8ef4 192.168.137.103:9002
        slots:5461-10922 (5462 slots) master
        M: 9c8cfcb07b57005e5d9c642f72e6f24fe864087f 192.168.137.103:9003
        slots:10923-16383 (5461 slots) master
        S: 2649b05474f9d43c8671fc810ece41f3cc462001 192.168.137.103:9004
        replicates b44cf658d61538359b1f941b6920fa8b69e28388
        S: 25e3690115e1ed4fed38b9a55ac9e2995c00e650 192.168.137.103:9005
        replicates 87d089195f825e93bd8863f60c685b76978e8ef4
        S: 8e889ead0e658ca50b8d74fc811df3751103f007 192.168.137.103:9006
        replicates 9c8cfcb07b57005e5d9c642f72e6f24fe864087f
        Can I set the above configuration? (type 'yes' to accept): yes
        >>> Nodes configuration updated
        >>> Assign a different config epoch to each node
        >>> Sending CLUSTER MEET messages to join the cluster
        Waiting for the cluster to join......
        >>> Performing Cluster Check (using node 192.168.137.103:9001)
        M: b44cf658d61538359b1f941b6920fa8b69e28388 192.168.137.103:9001
        slots:0-5460 (5461 slots) master
        1 additional replica(s)
        M: 87d089195f825e93bd8863f60c685b76978e8ef4 192.168.137.103:9002
        slots:5461-10922 (5462 slots) master
        1 additional replica(s)
        S: 25e3690115e1ed4fed38b9a55ac9e2995c00e650 192.168.137.103:9005
        slots: (0 slots) slave
        replicates 87d089195f825e93bd8863f60c685b76978e8ef4
        M: 9c8cfcb07b57005e5d9c642f72e6f24fe864087f 192.168.137.103:9003
        slots:10923-16383 (5461 slots) master
        1 additional replica(s)
        S: 8e889ead0e658ca50b8d74fc811df3751103f007 192.168.137.103:9006
        slots: (0 slots) slave
        replicates 9c8cfcb07b57005e5d9c642f72e6f24fe864087f
        S: 2649b05474f9d43c8671fc810ece41f3cc462001 192.168.137.103:9004
        slots: (0 slots) slave
        replicates b44cf658d61538359b1f941b6920fa8b69e28388
        [OK] All nodes agree about slots configuration.
        >>> Check for open slots...
        >>> Check slots coverage...
        [OK] All 16384 slots covered.


